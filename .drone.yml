---
kind: pipeline
type: docker
name: build-and-publish-docker

platform:
  os: linux
  arch: amd64

trigger:
  branch:
  - master
  event:
    exclude:
    - pull_request
    - tag
    - promote
    - rollback
steps:

- name: store-dev-release
  image: golang:1.13
  environment:
    USERNAME:
      from_secret: cbox_username
    PASSWORD:
      from_secret: cbox_password
  detach: true
  commands:
    - TZ=Europe/Berlin go run tools/create-artifacts/main.go -dev -commit ${DRONE_COMMIT} -goversion `go version | awk '{print $$3}'`
    - curl -X MKCOL "https://cernbox.cern.ch/cernbox/desktop/remote.php/webdav/eos/project/r/reva/www/daily/" -k -u $${USERNAME}:$${PASSWORD}
    - curl -X MKCOL "https://cernbox.cern.ch/cernbox/desktop/remote.php/webdav/eos/project/r/reva/www/daily/`date '+%Y-%m-%d'`" -k -u $${USERNAME}:$${PASSWORD}
    - curl -X MKCOL "https://cernbox.cern.ch/cernbox/desktop/remote.php/webdav/eos/project/r/reva/www/daily/`date '+%Y-%m-%d'`/${DRONE_COMMIT}" -k -u $${USERNAME}:$${PASSWORD}
    - for i in $(ls /drone/src/dist);do curl -X PUT -u $${USERNAME}:$${PASSWORD} https://cernbox.cern.ch/cernbox/desktop/remote.php/webdav/eos/project/r/reva/www/daily/`date '+%Y-%m-%d'`/${DRONE_COMMIT}/$${i} --data-binary @./dist/$${i} ; done

- name: license-scan
  image: golang:1.13
  environment:
    FOSSA_API_KEY:
      from_secret: fossa_api_key
  detach: true
  commands:
    - wget -qO- https://github.com/fossas/fossa-cli/releases/download/v1.0.11/fossa-cli_1.0.11_linux_amd64.tar.gz | tar xvz -C /go/bin/
    - /go/bin/fossa analyze


- name: build
  image: golang:1.13
  commands:
    - make ci

- name: lint
  image: golangci/golangci-lint:v1.26
  commands:
    - golangci-lint run --timeout 2m0s

- name: license-check
  image: golang:1.13
  failure: ignore
  environment:
    FOSSA_API_KEY:
      from_secret: fossa_api_key
  commands:
    - wget -qO- https://github.com/fossas/fossa-cli/releases/download/v1.0.11/fossa-cli_1.0.11_linux_amd64.tar.gz | tar xvz -C /go/bin/
    - /go/bin/fossa test --timeout 900

- name: publish-docker-reva-latest
  pull: always
  image: plugins/docker
  settings:
    repo: cs3org/reva
    tags: latest
    dockerfile: Dockerfile.reva
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password

- name: publish-docker-revad-latest
  pull: always
  image: plugins/docker
  settings:
    repo: cs3org/revad
    tags: latest
    dockerfile: Dockerfile.revad
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password

---
kind: pipeline
type: docker
name: build-only

platform:
  os: linux
  arch: amd64

trigger:
  event:
    include:
    - pull_request

steps:
- name: license-scan
  image: golang:1.13
  environment:
    FOSSA_API_KEY:
      from_secret: fossa_api_key
  detach: true
  commands:
    - wget -qO- https://github.com/fossas/fossa-cli/releases/download/v1.0.11/fossa-cli_1.0.11_linux_amd64.tar.gz | tar xvz -C /go/bin/
    - /go/bin/fossa analyze

- name: build
  image: golang:1.13
  commands:
    - make ci

- name: lint
  image: golangci/golangci-lint:v1.26
  commands:
    - golangci-lint run --timeout 2m0s

- name: license-check
  image: golang:1.13
  failure: ignore
  environment:
    FOSSA_API_KEY:
      from_secret: fossa_api_key
  commands:
    - wget -qO- https://github.com/fossas/fossa-cli/releases/download/v1.0.11/fossa-cli_1.0.11_linux_amd64.tar.gz | tar xvz -C /go/bin/
    - /go/bin/fossa test --timeout 900

---
kind: pipeline
type: docker
name: release

platform:
  os: linux
  arch: amd64

trigger:
  event:
    include:
    - tag

steps:
- name: license-scan
  image: golang:1.13
  environment:
    FOSSA_API_KEY:
      from_secret: fossa_api_key
  detach: true
  commands:
    - wget -qO- https://github.com/fossas/fossa-cli/releases/download/v1.0.11/fossa-cli_1.0.11_linux_amd64.tar.gz | tar xvz -C /go/bin/
    - /go/bin/fossa analyze

- name: build
  image: golang:1.13
  commands:
    - make ci

- name: lint
  # will slow down build slightly. In order to get jsonpb deprecation.
  image: golangci/golangci-lint:v1.26.0
  commands:
    - golangci-lint run --timeout 2m0s

- name: license-check
  image: golang:1.13
  failure: ignore
  environment:
    FOSSA_API_KEY:
      from_secret: fossa_api_key
  commands:
    - wget -qO- https://github.com/fossas/fossa-cli/releases/download/v1.0.11/fossa-cli_1.0.11_linux_amd64.tar.gz | tar xvz -C /go/bin/
    - /go/bin/fossa test --timeout 900

- name: create-dist
  image: golang:1.13
  commands:
    - go run tools/create-artifacts/main.go -version ${DRONE_TAG} -commit ${DRONE_COMMIT} -goversion `go version | awk '{print $$3}'`

- name: publish
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    files: dist/*
    note: changelog/NOTE.md

- name: docker-reva-tag
  pull: always
  image: plugins/docker
  settings:
    repo: cs3org/reva
    tags: ${DRONE_TAG}
    dockerfile: Dockerfile.reva
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password

- name: docker-revad-tag
  pull: always
  image: plugins/docker
  settings:
    repo: cs3org/revad
    tags: ${DRONE_TAG}
    dockerfile: Dockerfile.revad
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password

---
kind: pipeline
type: docker
name: litmus-oc-old-webdav

platform:
  os: linux
  arch: amd64

trigger:
  event:
    include:
      - pull_request
      - tag

steps:
  - name: build
    image: golang:1.13
    commands:
      - make build-ci

  - name: revad-services
    image: golang:1.13
    detach: true
    commands:
      - cd /drone/src/drone/oc-integration-tests/
      - /drone/src/cmd/revad/revad -c frontend.toml &
      - /drone/src/cmd/revad/revad -c gateway.toml &
      - /drone/src/cmd/revad/revad -c storage-home.toml &
      - /drone/src/cmd/revad/revad -c storage-oc.toml &
      - /drone/src/cmd/revad/revad -c users.toml

  - name: litmus-oc-old-webdav
    image: owncloud/litmus:latest
    environment:
      LITMUS_URL: http://revad-services:20080/remote.php/webdav
      LITMUS_USERNAME: einstein
      LITMUS_PASSWORD: relativity
      TESTS: basic http copymove props

---
kind: pipeline
type: docker
name: litmus-oc-new-webdav

platform:
  os: linux
  arch: amd64

trigger:
  event:
    include:
      - pull_request
      - tag

steps:
  - name: build
    image: golang:1.13
    commands:
      - make build-ci

  - name: revad-services
    image: golang:1.13
    detach: true
    commands:
      - cd /drone/src/drone/oc-integration-tests/
      - /drone/src/cmd/revad/revad -c frontend.toml &
      - /drone/src/cmd/revad/revad -c gateway.toml &
      - /drone/src/cmd/revad/revad -c storage-home.toml &
      - /drone/src/cmd/revad/revad -c storage-oc.toml &
      - /drone/src/cmd/revad/revad -c users.toml

  - name: litmus-oc-new-webdav
    image: owncloud/litmus:latest
    environment:
      LITMUS_URL: http://revad-services:20080/remote.php/dav/files/einstein
      LITMUS_USERNAME: einstein
      LITMUS_PASSWORD: relativity
      TESTS: basic http copymove props

---
kind: pipeline
type: docker
name: owncloud-integration-tests

platform:
  os: linux
  arch: amd64

trigger:
  event:
    include:
      - pull_request
      - tag

steps:
  - name: build
    image: golang:1.13
    commands:
      - make build-ci

  - name: revad-services
    image: golang:1.13
    detach: true
    commands:
      - cd /drone/src/drone/oc-integration-tests/
      - /drone/src/cmd/revad/revad -c frontend.toml &
      - /drone/src/cmd/revad/revad -c gateway.toml &
      - /drone/src/cmd/revad/revad -c shares.toml &
      - /drone/src/cmd/revad/revad -c storage-home.toml &
      - /drone/src/cmd/revad/revad -c storage-oc.toml &
      - /drone/src/cmd/revad/revad -c storage-publiclink.toml &
      - /drone/src/cmd/revad/revad -c ldap-users.toml

  - name: oC10APIAcceptanceTests
    image: owncloudci/php:7.2
    commands:
      - git clone -b master --depth=1 https://github.com/owncloud/testing.git /drone/src/tmp/testing
      - git clone -b master --single-branch --no-tags https://github.com/owncloud/core.git /drone/src/tmp/testrunner
      - cd /drone/src/tmp/testrunner
      - git checkout 5d1cf1895083f143c4600a613bfbad5c1810846b
      - make test-acceptance-api
    environment:
      TEST_SERVER_URL: 'http://revad-services:20080'
      OCIS_REVA_DATA_ROOT: '/drone/src/tmp/reva/'
      SKELETON_DIR: '/drone/src/tmp/testing/data/apiSkeleton'
      TEST_EXTERNAL_USER_BACKENDS: 'true'
      REVA_LDAP_HOSTNAME: 'ldap'
      TEST_OCIS: 'true'
      BEHAT_FILTER_TAGS: '~@skipOnOcis&&~@skipOnOcis-OC-Storage'

services:
  - 'name': 'ldap'
    'image': 'osixia/openldap:1.3.0'
    'pull': 'always'
    'environment':
      LDAP_DOMAIN: 'owncloud.com'
      LDAP_ORGANISATION: 'ownCloud'
      LDAP_ADMIN_PASSWORD: 'admin'
      LDAP_TLS_VERIFY_CLIENT: 'never'
      HOSTNAME: 'ldap'

  - name: redis
    image: webhippie/redis
    'pull': 'always'
    'environment':
      REDIS_DATABASES: 1
