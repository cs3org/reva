// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/types/types.proto

package typespb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Opaque represents opaque information
// in a form on a map.
// For example, a local filesystem can
// use this message to include filesystem
// extended attributes.
type Opaque struct {
	// REQUIRED.
	Map                  map[string]*OpaqueEntry `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Opaque) Reset()         { *m = Opaque{} }
func (m *Opaque) String() string { return proto.CompactTextString(m) }
func (*Opaque) ProtoMessage()    {}
func (*Opaque) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b0284433ec635ec, []int{0}
}

func (m *Opaque) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Opaque.Unmarshal(m, b)
}
func (m *Opaque) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Opaque.Marshal(b, m, deterministic)
}
func (m *Opaque) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Opaque.Merge(m, src)
}
func (m *Opaque) XXX_Size() int {
	return xxx_messageInfo_Opaque.Size(m)
}
func (m *Opaque) XXX_DiscardUnknown() {
	xxx_messageInfo_Opaque.DiscardUnknown(m)
}

var xxx_messageInfo_Opaque proto.InternalMessageInfo

func (m *Opaque) GetMap() map[string]*OpaqueEntry {
	if m != nil {
		return m.Map
	}
	return nil
}

// OpaqueEntry represents the encoded
// opaque value.
type OpaqueEntry struct {
	// REQUIRED.
	// The decoder to use: json, xml, toml, ...
	// TODO(labkode): make encoder a fixed set using a enum type?
	Decoder string `protobuf:"bytes,1,opt,name=decoder,proto3" json:"decoder,omitempty"`
	// REQUIRED.
	// The encoded value.
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpaqueEntry) Reset()         { *m = OpaqueEntry{} }
func (m *OpaqueEntry) String() string { return proto.CompactTextString(m) }
func (*OpaqueEntry) ProtoMessage()    {}
func (*OpaqueEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b0284433ec635ec, []int{1}
}

func (m *OpaqueEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpaqueEntry.Unmarshal(m, b)
}
func (m *OpaqueEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpaqueEntry.Marshal(b, m, deterministic)
}
func (m *OpaqueEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpaqueEntry.Merge(m, src)
}
func (m *OpaqueEntry) XXX_Size() int {
	return xxx_messageInfo_OpaqueEntry.Size(m)
}
func (m *OpaqueEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_OpaqueEntry.DiscardUnknown(m)
}

var xxx_messageInfo_OpaqueEntry proto.InternalMessageInfo

func (m *OpaqueEntry) GetDecoder() string {
	if m != nil {
		return m.Decoder
	}
	return ""
}

func (m *OpaqueEntry) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// Adapted from Google google/protobuf/timestamp.proto.
// A Timestamp represents a point in time independent of any time zone or local
// calendar, encoded as a count of seconds and fractions of seconds at
// nanosecond resolution. The count is relative to an epoch at UTC midnight on
// January 1, 1970, in the proleptic Gregorian calendar which extends the
// Gregorian calendar backwards to year one.
//
// The range MUST be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.
// Restricting to this range ensures the conversion from and to [RFC
// 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.
type Timestamp struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds uint64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time.
	// Value MUST be from 0 to 999,999,999
	// inclusive.
	Nanos                uint32   `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b0284433ec635ec, []int{2}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() uint64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() uint32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

// A UserId represents a user.
type UserId struct {
	// REQUIRED.
	// The identity provider for the user.
	Idp string `protobuf:"bytes,1,opt,name=idp,proto3" json:"idp,omitempty"`
	// REQUIRED.
	// the unique identifier for the user in the scope of
	// the identity provider.
	OpaqueId             string   `protobuf:"bytes,2,opt,name=opaque_id,json=opaqueId,proto3" json:"opaque_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b0284433ec635ec, []int{3}
}

func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (m *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(m, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetIdp() string {
	if m != nil {
		return m.Idp
	}
	return ""
}

func (m *UserId) GetOpaqueId() string {
	if m != nil {
		return m.OpaqueId
	}
	return ""
}

func init() {
	proto.RegisterType((*Opaque)(nil), "cs3.types.Opaque")
	proto.RegisterMapType((map[string]*OpaqueEntry)(nil), "cs3.types.Opaque.MapEntry")
	proto.RegisterType((*OpaqueEntry)(nil), "cs3.types.OpaqueEntry")
	proto.RegisterType((*Timestamp)(nil), "cs3.types.Timestamp")
	proto.RegisterType((*UserId)(nil), "cs3.types.UserId")
}

func init() { proto.RegisterFile("cs3/types/types.proto", fileDescriptor_0b0284433ec635ec) }

var fileDescriptor_0b0284433ec635ec = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x25, 0x9d, 0x6e, 0xcb, 0x37, 0x07, 0x12, 0x54, 0xca, 0xbc, 0x8c, 0x9e, 0x7a, 0x18, 0x15,
	0xd6, 0x83, 0xa2, 0xe8, 0xa1, 0x63, 0x87, 0x1d, 0x74, 0xa5, 0xab, 0xa0, 0x22, 0x48, 0xd6, 0xe4,
	0x50, 0xb4, 0x4d, 0x6c, 0x3a, 0xa1, 0x7f, 0xc0, 0x1f, 0xe2, 0xcf, 0xf1, 0x57, 0x49, 0x92, 0x55,
	0x07, 0x5e, 0xda, 0xef, 0xbd, 0xef, 0xbd, 0x47, 0x5e, 0x02, 0xc7, 0x99, 0x0a, 0xcf, 0xea, 0x46,
	0x72, 0x65, 0xbf, 0x81, 0xac, 0x44, 0x2d, 0x08, 0xce, 0x54, 0x18, 0x18, 0xc2, 0xfb, 0x44, 0xd0,
	0x5d, 0x4a, 0xfa, 0xbe, 0xe1, 0x64, 0x02, 0x9d, 0x82, 0x4a, 0x17, 0x8d, 0x3b, 0xfe, 0x60, 0x3a,
	0x0a, 0x7e, 0x35, 0x81, 0xdd, 0x07, 0xb7, 0x54, 0xce, 0xcb, 0xba, 0x6a, 0x12, 0x2d, 0x1b, 0xdd,
	0x41, 0xbf, 0x25, 0xc8, 0x21, 0x74, 0x5e, 0x79, 0xe3, 0xa2, 0x31, 0xf2, 0x71, 0xa2, 0x47, 0x32,
	0x81, 0xfd, 0x0f, 0xfa, 0xb6, 0xe1, 0xae, 0x33, 0x46, 0xfe, 0x60, 0x7a, 0xf2, 0x2f, 0xcd, 0x26,
	0x59, 0xd1, 0xa5, 0x73, 0x81, 0xbc, 0x6b, 0x18, 0xec, 0x6c, 0x88, 0x0b, 0x3d, 0xc6, 0x33, 0xc1,
	0x78, 0xb5, 0x8d, 0x6d, 0x21, 0x39, 0xda, 0x8d, 0x3e, 0xd8, 0x46, 0x78, 0x57, 0x80, 0xd3, 0xbc,
	0xe0, 0xaa, 0xa6, 0x85, 0xd4, 0x66, 0xc5, 0x33, 0x51, 0x32, 0x65, 0xcc, 0x7b, 0x49, 0x0b, 0xb5,
	0xb9, 0xa4, 0xa5, 0x50, 0xc6, 0x3c, 0x4c, 0x2c, 0xf0, 0xce, 0xa1, 0x7b, 0xaf, 0x78, 0xb5, 0x60,
	0xba, 0x49, 0xce, 0x64, 0xdb, 0x24, 0x67, 0x92, 0x9c, 0x02, 0x16, 0xe6, 0x5c, 0x2f, 0x39, 0x33,
	0x2e, 0x9c, 0xf4, 0x2d, 0xb1, 0x60, 0xd1, 0x0d, 0x0c, 0x33, 0x51, 0xfc, 0x95, 0x8b, 0x20, 0xd5,
	0xbf, 0x58, 0xdf, 0x72, 0x8c, 0x9e, 0x7a, 0x86, 0x94, 0xeb, 0x2f, 0x07, 0xcf, 0xa2, 0xe5, 0x43,
	0xfa, 0x18, 0xcf, 0x57, 0xdf, 0x0e, 0x9e, 0xad, 0xc2, 0x67, 0x33, 0xaf, 0xbb, 0xe6, 0x3d, 0xc2,
	0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x45, 0x64, 0x5f, 0xa8, 0x01, 0x00, 0x00,
}
