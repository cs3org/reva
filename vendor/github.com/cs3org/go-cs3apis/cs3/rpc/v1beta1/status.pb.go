// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/rpc/v1beta1/status.proto

package rpcv1beta1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The `Status` message contains two pieces of data: error code and error message.
// The error code should be an enum value of [cs3.rpc.code].
// The error message should be a developer-facing English
// message that helps developers *understand* and *resolve* the error.
type Status struct {
	// REQUIRED.
	// The status code, which should be an enum value of [cs3.rpc.code][cs3.rpc.code].
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=cs3.rpc.v1beta1.Code" json:"code,omitempty"`
	// OPTIONAL.
	// A developer-facing error message, which should be in English. Any
	// user-facing error message should be localized and sent in the
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// OPTIONAL.
	// A trace added to the response for helping support to identify client problems.
	Trace string `protobuf:"bytes,3,opt,name=trace,proto3" json:"trace,omitempty"`
	// OPTIONAL.
	// A target URI as per RFC3986 to redirect requests to another location.
	// A Status message with CODE_REDIRECT MUST always set the target_uri.
	// https://golang.org/pkg/net/url/#URL provides a quick view of the format.
	TargetUri            string   `protobuf:"bytes,4,opt,name=target_uri,json=targetUri,proto3" json:"target_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_e02c75bc6b84198d, []int{0}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_CODE_INVALID
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Status) GetTrace() string {
	if m != nil {
		return m.Trace
	}
	return ""
}

func (m *Status) GetTargetUri() string {
	if m != nil {
		return m.TargetUri
	}
	return ""
}

func init() {
	proto.RegisterType((*Status)(nil), "cs3.rpc.v1beta1.Status")
}

func init() { proto.RegisterFile("cs3/rpc/v1beta1/status.proto", fileDescriptor_e02c75bc6b84198d) }

var fileDescriptor_e02c75bc6b84198d = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x49, 0x2e, 0x36, 0xd6,
	0x2f, 0x2a, 0x48, 0xd6, 0x2f, 0x33, 0x4c, 0x4a, 0x2d, 0x49, 0x34, 0xd4, 0x2f, 0x2e, 0x49, 0x2c,
	0x29, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4f, 0x2e, 0x36, 0xd6, 0x2b, 0x2a,
	0x48, 0xd6, 0x83, 0xca, 0x4a, 0x49, 0xa1, 0x2b, 0x4f, 0xce, 0x4f, 0x49, 0x85, 0x28, 0x56, 0x6a,
	0x62, 0xe4, 0x62, 0x0b, 0x06, 0xeb, 0x16, 0xd2, 0xe4, 0x62, 0x01, 0x49, 0x48, 0x30, 0x2a, 0x30,
	0x6a, 0xf0, 0x19, 0x89, 0xea, 0xa1, 0x19, 0xa3, 0xe7, 0x9c, 0x9f, 0x92, 0x1a, 0x04, 0x56, 0x22,
	0x24, 0xc1, 0xc5, 0x9e, 0x9b, 0x5a, 0x5c, 0x9c, 0x98, 0x9e, 0x2a, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1,
	0x19, 0x04, 0xe3, 0x0a, 0x89, 0x70, 0xb1, 0x96, 0x14, 0x25, 0x26, 0xa7, 0x4a, 0x30, 0x83, 0xc5,
	0x21, 0x1c, 0x21, 0x59, 0x2e, 0xae, 0x92, 0xc4, 0xa2, 0xf4, 0xd4, 0x92, 0xf8, 0xd2, 0xa2, 0x4c,
	0x09, 0x16, 0xb0, 0x14, 0x27, 0x44, 0x24, 0xb4, 0x28, 0xd3, 0x29, 0x8a, 0x4b, 0x38, 0x39, 0x3f,
	0x17, 0xdd, 0x42, 0x27, 0x6e, 0x88, 0xc3, 0x02, 0x40, 0x0e, 0x0d, 0x60, 0x8c, 0xe2, 0x2a, 0x2a,
	0x48, 0x86, 0x4a, 0x2d, 0x62, 0x62, 0x76, 0x0e, 0x8a, 0x58, 0xc5, 0xc4, 0xef, 0x5c, 0x6c, 0xac,
	0x17, 0x54, 0x90, 0xac, 0x17, 0x66, 0xe8, 0x04, 0x12, 0x3f, 0x05, 0x16, 0x89, 0x09, 0x2a, 0x48,
	0x8e, 0x81, 0x8a, 0x24, 0xb1, 0x81, 0xfd, 0x69, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x18, 0x1f,
	0xa0, 0x1d, 0x34, 0x01, 0x00, 0x00,
}
