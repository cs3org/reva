# This frontend.toml config file will start a reva service that:
# - serves as the entypoint for all legacy owncloud requests
# - serves http endpoints on port 20000
#   - /owncloud - ocdav
#   - /ocs - ocs
#   - TODO ocm
# - authenticates requests using basic auth
# - serves the grpc services on port 18001
[core]
max_cpus = "2"

[log]
level = "debug"

[grpc]
network = "tcp"
address = "0.0.0.0:18001"
enabled_services = [
    "authprovider", # provides basic auth
]
enabled_interceptors = ["auth"]

[grpc.services.authprovider]
auth_manager = "json"

[grpc.services.authprovider.auth_managers.json]
users = "./examples/separate/users.demo.json"

[http]
enabled_services = ["ocdav", "ocs"]
enabled_middlewares = ["cors", "auth"]
address = "0.0.0.0:20000"

[http.middlewares.auth]
gateway = "localhost:19000"
auth_type = "basic"
credential_strategy = "basic"
token_strategy = "header"
token_writer = "header"
token_manager = "jwt"
skip_methods = ["/status.php"]

[http.middlewares.auth.token_managers.jwt]
secret = "Pive-Fumkiu4"

[http.services.ocdav]
# serve ocdav on the root path
prefix = ""
chunk_folder = "/var/tmp/revad/chunks"
# for user lookups
gateway = "localhost:19000"
# prefix the path of requests to /dav/files with this namespace
# While owncloud has only listed usernames at this endpoint CERN has
# been exposing more than just usernames. For owncloud deployments we
# can prefix the path to jail the requests to the correct CS3 namespace.
# In this deployment we mounted the owncloud storage provider at /oc. It
# expects a username as the first path segment.
files_namespace = "/oc/"
# similar to the dav/files endpoint we can configure a prefix for the old webdav endpoint
webdav_namespace = "/home/"

[http.services.ocs]
# prefix = "ocs"
# for user lookups and sharing
gateway = "localhost:19000"
