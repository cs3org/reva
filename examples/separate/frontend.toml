# This frontend.toml config file will start a reva service that:
# - serves as the entrypoint for owncloud APIs.
# - serves http endpoints on port 20080
#   - /owncloud - ocdav
#   - /ocs - ocs
#   - /oauth2 - oidcprovider
#   - /.well-known - wellknown service to announce openid-configuration
#   - TODO(diocas): ocm
# - authenticates requests using oidc bearer auth and basic auth as fallback
# - serves the grpc services on port 18002
[grpc]
address = "0.0.0.0:20099"

[grpc.services.authprovider]
auth_manager = "oidc"

[grpc.services.authprovider.auth_managers.oidc]
# If you want to use your own openid provider change this config
issuer = "http://localhost:20080"

[grpc.interceptors.auth]
token_manager = "jwt"

[grpc.interceptors.auth.token_managers.jwt]
secret = "Pive-Fumkiu4"

[http]
address = "0.0.0.0:20080"

[http.middlewares.auth]
gateway = "localhost:19000"
credential_chain = ["basic", "bearer"]
token_strategy = "header"
token_writer = "header"
token_manager = "jwt"

[http.middlewares.auth.token_managers.jwt]
secret = "Pive-Fumkiu4"

[http.middlewares.cors]
allowed_origins = ["*"]
allowed_methods = [
	"OPTIONS",
	"GET",
	"PUT",
	"POST",
	"DELETE",
	"MKCOL",
	"PROPFIND",
	"PROPPATCH",
	"MOVE",
	"COPY",
	"REPORT",
	"SEARCH"
]
allowed_headers = [
	"Origin",
	"Accept",
	"Depth",
	"Content-Type",
	"X-Requested-With",
	"Authorization",
	"Ocs-Apirequest",
	"If-Match",
	"If-None-Match",
	"Destination",
	"Overwrite"
]
allow_credentials = true
options_passthrough = false

[http.services.wellknown]
issuer = "http://localhost:20080"
authorization_endpoint = "http://localhost:20080/oauth2/auth"
token_endpoint = "http://localhost:20080/oauth2/token" 
#jwks_uri = ""
revocation_endpoint = "http://localhost:20080/oauth2/auth"
introspection_endpoint = "http://localhost:20080/oauth2/introspect"
userinfo_endpoint = "http://localhost:20080/oauth2/userinfo"
#end_session_endpoint = 

[http.services.oidcprovider]
prefix = "oauth2"
gateway = "localhost:19000"
issuer = "http://localhost:20080"

[http.services.oidcprovider.clients.phoenix]
id = "phoenix"
redirect_uris = ["http://localhost:8300/oidc-callback.html", "http://localhost:8300/"]
grant_types = ["implicit", "refresh_token", "authorization_code", "password", "client_credentials"]
response_types = ["code"] # use authorization code flow, see https://developer.okta.com/blog/2019/05/01/is-the-oauth-implicit-flow-dead for details
scopes = ["openid", "profile", "email", "offline"]
public = true # force PKCS for public clients

[http.services.ocdav]
# serve ocdav on the root path
prefix = ""
chunk_folder = "/var/tmp/revad/chunks"
# for user lookups
gateway = "localhost:19000"
# prefix the path of requests to /dav/files with this namespace
# While owncloud has only listed usernames at this endpoint CERN has
# been exposing more than just usernames. For owncloud deployments we
# can prefix the path to jail the requests to the correct CS3 namespace.
# In this deployment we mounted the owncloud storage provider at /oc. It
# expects a username as the first path segment.
files_namespace = "/"
# currently, only the desktop client will use this endpoint, but only if
# the dav.chunking capability is available
# TODO implement a path wrapper that rewrites `<username>` into the path
# layout for the users home?
# no, use GetHome?
# for eos we need to rewrite the path
# TODO strip the username from the path so the CS3 namespace can be mounted
# at the files/<username> endpoint? what about migration? separate reva instance

# similar to the dav/files endpoint we can configure a prefix for the old webdav endpoint
# we use the old webdav endpoint to present the cs3 namespace
webdav_namespace = "/"
# note: this changes the tree that is rendered at remote.php/webdav from the users home to the cs3 namespace
# use webdav_namespace = "/home" to use the old namespace that only exposes the users files
# this endpoint should not affect the desktop client sync but will present different folders for the other clients:
# - the desktop clients use a hardcoded remote.php/dav/files/<username> if the dav.chunkung capability is present
# - the ios ios uses the core.webdav-root capability which points to remote.php/webdav in oc10
# - the oc js sdk is hardcoded to the remote.php/webdav so it will see the new tree
# - TODO android? no sync ... but will see different tree

[http.services.ocs]
# prefix = "ocs"
# for user lookups and sharing
gateway = "localhost:19000"


# options for the /ocs/v1.php/config endpoint
[http.services.ocs.config]
version = "1.8"
website = "reva"
host = "http://localhost:20080"
contact = "admin@localhost"
ssl = "false"

# options for the /ocs/v1.php/cloud/capabilities endpoint
[http.services.ocs.capabilities.capabilities.core]
poll_interval = 60
webdav_root = "remote.php/webdav"
[http.services.ocs.capabilities.capabilities.core.status]
installed = true
maintenance = false
needsDbUpgrade = false
version = "10.0.11.5"
versionstring = "10.0.11"
edition = "community"
productname = "reva"
hostname = ""
[http.services.ocs.capabilities.capabilities.checksums]
supported_types = ["SHA256"]
preferred_upload_type = "SHA256"
[http.services.ocs.capabilities.capabilities.files]
private_links = false
bigfilechunking = false
blacklisted_files = []
undelete = true
versioning = true
[http.services.ocs.capabilities.capabilities.dav]
chunking = "1.0"
[http.services.ocs.capabilities.capabilities.files_sharing]
api_enabled = true
resharing = true
group_sharing = true
auto_accept_share = true
share_with_group_members_only = true
share_with_membership_groups_only = true
default_permissions = 22
search_min_length = 3
[http.services.ocs.capabilities.capabilities.files_sharing.public]
enabled = true
send_mail = true
social_share = true
upload = true
multiple = true
supports_upload_only = true
[http.services.ocs.capabilities.capabilities.files_sharing.public.password]
enforced = true
[http.services.ocs.capabilities.capabilities.files_sharing.public.password.enforced_for]
read_only = true
read_write = true
upload_only = true
[http.services.ocs.capabilities.capabilities.files_sharing.public.expire_date]
enabled = true
[http.services.ocs.capabilities.capabilities.files_sharing.user]
send_mail = true
[http.services.ocs.capabilities.capabilities.files_sharing.user_enumeration]
enabled = true
group_members_only = true
[http.services.ocs.capabilities.capabilities.files_sharing.federation]
outgoing = true
incoming = true
[http.services.ocs.capabilities.capabilities.notifications]
endpoints = ["list", "get", "delete"]
[http.services.ocs.capabilities.version]
edition = "reva"
major = 10
minor = 0
micro = 11
string = "10.0.11"
