
user nginx;
worker_processes auto;

pid       /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
  worker_connections  1024;
}

http {
  include      /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  map $status $loggable {
    ~^[23]  0;
    default 1;
  }

  access_log /var/log/nginx/access.log combined if=$loggable;

  sendfile             on;
  tcp_nopush           on;
  tcp_nodelay          on;
  keepalive_timeout    65;
  types_hash_max_size  2048;
  client_max_body_size 8G;
  #gzip                 on;

  # avoid nginx buffering all the payload, only available in > 1.7
  proxy_buffering off;
  proxy_request_buffering off;

  include /etc/nginx/conf.d/*.conf;

  upstream revad {
    server your.revad.org:443;
  }

  server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
  }

  # https://ssl-config.mozilla.org/#server=nginx&version=1.20.1&config=intermediate&openssl=1.0.2k&guideline=5.6
  server {
    listen 443 ssl http2;
    server_name localhost;

    ssl_certificate your.cert.pem;
    ssl_certificate_key your.key.pem;

    ssl_session_timeout 5m;

    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    proxy_connect_timeout 1200;
    proxy_send_timeout    1200;
    proxy_read_timeout    1200;
    send_timeout          1200;
    proxy_buffering off;
    proxy_request_buffering off;

    location ^~ /data {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ~ /s/[^/]*/download {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ^~ /ocs/ {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ^~ /dav/ {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ^~ /webdav/ {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ^~ /remote.php/ {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ^~ /preferences {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ^~ /otg {
      return 204;
    }

    location ^~ /app/ {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ^~ /ocm/ {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ~ ^/sciencemesh/ {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ^~ /ocm-provider {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ^~ /status.php {
      proxy_pass       https://revad;
      proxy_set_header Host $host;
    }

    location ~ ^/(js|css|icons|fonts|assets)/ {
      root /var/www/web;
      add_header Cache-Control "public, max-age=31536000, immutable";
      etag off;
      gzip_static on;
    }

    location ^~ /cernbox {
      root /var/www;
      add_header Cache-Control "no-cache";
      add_header Access-Control-Allow-Origin "https://idp.docker:8443" always;
      etag off;
      gzip_static on;
    }

    location  / {
      root /var/www/web;
      add_header Cache-Control "no-cache";
      add_header Access-Control-Allow-Origin "https://idp.docker:8443" always;
      etag off;
      gzip_static on;
      try_files $uri /index.html;
    }

#    location / {
#      proxy_pass       https://revad/ui;
#      proxy_set_header Host $host;
#    }
  }
}
